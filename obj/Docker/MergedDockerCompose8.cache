name: dockercompose9940920799962117231
services:
  adminer:
    container_name: adminer
    image: adminer
    networks:
      backend: null
    ports:
      - mode: ingress
        target: 8080
        published: "8082"
        protocol: tcp
    restart: always
  lostandfound:
    container_name: lostandfound
    environment:
      POSTGRES_DB: lostandfound-db
      POSTGRES_PASSWORD: lostandfound-password
      POSTGRES_USER: lostandfound-user
    image: postgres:15-alpine
    networks:
      backend: null
    ports:
      - mode: ingress
        target: 5432
        published: "5435"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: data-postgres
        target: /var/lib/postgresql/data
        volume: {}
  lostandfoundcoreapi:
    build:
      context: C:\Users\SNDIENGK\Documents\challenge\Lost-and-found-management
      dockerfile: LostAndFoundCoreApi/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: lostandfoundcoreapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "8050"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "8051"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\SNDIENGK\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\SNDIENGK\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  lostandfounddocumentapi:
    build:
      context: C:\Users\SNDIENGK\Documents\challenge\Lost-and-found-management
      dockerfile: LostAndFoundDocumentApi/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: lostandfounddocumentapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "8060"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "8061"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\SNDIENGK\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\SNDIENGK\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  lostandfoundnotificationapi:
    build:
      context: C:\Users\SNDIENGK\Documents\challenge\Lost-and-found-management
      dockerfile: LostAndFoundNotificationApi/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: lostandfoundnotificationapi
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        published: "8040"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "8041"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\SNDIENGK\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\SNDIENGK\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  backend:
    name: lostandfound-network
  default:
    name: dockercompose9940920799962117231_default
volumes:
  data-postgres:
    name: dockercompose9940920799962117231_data-postgres